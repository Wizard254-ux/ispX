#!/bin/bash

# OpenVPN Server Setup Script
# This script automates the setup of an OpenVPN server
# Author: Generated by AI Assistant
# Date: 2025-04-19

echo "Starting OpenVPN Server Setup..."

# Step 1: Clean up any existing OpenVPN installation
echo "Step 1: Cleaning up existing OpenVPN installation..."
sudo systemctl stop openvpn
sudo systemctl stop openvpn-server@server
sudo apt-get remove --purge openvpn easy-rsa -y
sudo apt-get autoremove -y
sudo rm -rf /etc/openvpn
sudo rm -rf /etc/easy-rsa

# Step 2: Install OpenVPN and EasyRSA
echo "Step 2: Installing OpenVPN and EasyRSA..."
sudo apt-get update
sudo apt-get install openvpn easy-rsa -y

# Step 3: Set up EasyRSA
echo "Step 3: Setting up EasyRSA..."
sudo mkdir -p /etc/openvpn/easy-rsa
sudo cp -r /usr/share/easy-rsa/* /etc/openvpn/easy-rsa/
cd /etc/openvpn/easy-rsa

# Initialize PKI
echo "Initializing PKI..."
sudo ./easyrsa init-pki

# Create vars file with organization details
echo "Creating vars file..."
sudo tee /etc/openvpn/easy-rsa/pki/vars << 'VARS_EOF'
set_var EASYRSA_REQ_COUNTRY "US"
set_var EASYRSA_REQ_PROVINCE "California"
set_var EASYRSA_REQ_CITY "San Francisco"
set_var EASYRSA_REQ_ORG "Your Organization"
set_var EASYRSA_REQ_EMAIL "admin@yourdomain.com"
set_var EASYRSA_REQ_OU "My Organizational Unit"
set_var EASYRSA_BATCH "1"
VARS_EOF

# Generate certificates
echo "Generating certificates..."
sudo ./easyrsa build-ca nopass
sudo ./easyrsa gen-dh
sudo ./easyrsa build-server-full server nopass
sudo ./easyrsa build-client-full client1 nopass

# Step 4: Create server configuration
echo "Step 4: Creating server configuration..."
sudo mkdir -p /etc/openvpn/server

# Create server configuration file
sudo tee /etc/openvpn/server/server.conf << 'CONF_EOF'
port 1194
proto tcp
dev tun
ca /etc/openvpn/easy-rsa/pki/ca.crt
cert /etc/openvpn/easy-rsa/pki/issued/server.crt
key /etc/openvpn/easy-rsa/pki/private/server.key
dh /etc/openvpn/easy-rsa/pki/dh.pem
server 10.8.0.0 255.255.255.0
ifconfig-pool-persist /var/log/openvpn/ipp.txt
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
keepalive 10 120
cipher AES-256-CBC
data-ciphers AES-256-CBC
user nobody
group nogroup
persist-key
persist-tun
status /var/log/openvpn/openvpn-status.log
verb 3
explicit-exit-notify 1
CONF_EOF

# Set proper permissions
echo "Setting proper permissions..."
sudo chown root:root /etc/openvpn/server/server.conf
sudo chmod 600 /etc/openvpn/server/server.conf

# Step 5: Enable IP forwarding
echo "Step 5: Enabling IP forwarding..."
sudo sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g' /etc/sysctl.conf
sudo sysctl -p

# Step 6: Configure firewall
echo "Step 6: Configuring firewall..."
sudo ufw allow 1194/tcp
sudo ufw allow OpenSSH
sudo ufw enable

# Step 7: Start and enable OpenVPN service
echo "Step 7: Starting OpenVPN service..."
sudo systemctl start openvpn-server@server
sudo systemctl enable openvpn-server@server

# Step 8: Create client configuration
echo "Step 8: Creating client configuration..."
sudo mkdir -p /etc/openvpn/client

# Create client configuration file
sudo tee /etc/openvpn/client/client1.ovpn << 'CLIENT_EOF'
client
dev tun
proto tcp
remote 34.60.44.191 1194
resolv-retry infinite
nobind
persist-key
persist-tun
remote-cert-tls server
auth SHA256
cipher AES-256-CBC
data-ciphers AES-256-CBC
verb 3

<ca>
$(sudo cat /etc/openvpn/easy-rsa/pki/ca.crt)
</ca>

<cert>
$(sudo cat /etc/openvpn/easy-rsa/pki/issued/client1.crt)
</cert>

<key>
$(sudo cat /etc/openvpn/easy-rsa/pki/private/client1.key)
</key>
CLIENT_EOF

# Step 9: Verify installation
echo "Step 9: Verifying installation..."
echo "Checking OpenVPN service status..."
sudo systemctl status openvpn-server@server

echo "Checking if port 1194 is listening..."
sudo netstat -tulpn | grep 1194

echo "Checking OpenVPN logs..."
sudo tail -f /var/log/syslog | grep openvpn

echo "OpenVPN Server Setup Complete!"
echo "Client configuration file is located at: /etc/openvpn/client/client1.ovpn"
echo "Please make sure to:"
echo "1. Open port 1194 in your cloud provider's firewall/security groups"
echo "2. Copy the client1.ovpn file to your local machine"
echo "3. Import it into your OpenVPN client" 